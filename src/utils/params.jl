parameter_defaults = @with_kw (ρ = 0.02,
                                σ = 3.9896,
                                N = 10,
                                θ = 4.7060,
                                γ = 1.00,
                                κ = 0.0103,
                                ζ = 1.,
                                η = 0.,
                                Theta = 1,
                                χ = 0.4631,
                                υ = 0.0755,
                                μ = 0.,
                                δ = 0.053,
                                d_0 = 3.0700,
                                d_T = 2.5019,
                                d = d_T,
                                d0 = 3.07)

# some default settings
settings_defaults = @with_kw (z_max = 5,
                                z = unique([range(0., 0.1, length = 400)' range(0.1, 1., length = 400)' range(1., z_max, length = 100)']),
                                Δ_E = 1e-6,
                                iterations = 2,
                                ode_solve_algorithm = CVODE_BDF(),
                                g_node_count = 30,
                                T = 40.0,
                                t = range(0.0, T, length = 10),
                                g = LinearInterpolation(t, stationary_numerical(parameter_defaults(), z).g .+ 0.01*t),
                                E_node_count = 15,
                                entry_residuals_nodes_count = 15,
                                transition_x0 = [-0.8548749803351523, -0.6537622326511608, -0.5293697868887828, -0.36021440691126017,
                                -0.26346644427037536, -0.26346644427037536, -0.13810640732956692, -0.09617311296095687, 
                                -0.0854744058655228, -0.058102609354356516, -0.045080204154722026, -0.03052414466390918, -0.03052414466390918],
                                transition_lb = -ones(length(transition_x0)),
                                transition_ub = zeros(length(transition_x0)),
                                transition_iterations = 2, 
                                transition_weights = [fill(15, 3); fill(1, entry_residuals_nodes_count-3)],
                                transition_penalty_coefficient = 0.0, # coefficient to be used for a penalty function for constraints on increasing E
                                tstops = nothing)
