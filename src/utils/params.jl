parameter_defaults = @with_kw (ρ = 0.02,
                                σ = 3.9896,
                                N = 10,
                                θ = 4.7060,
                                γ = 1.00,
                                κ = 0.0103,
                                ζ = 1.,
                                η = 0.,
                                Theta = 1,
                                χ = 0.4631,
                                υ = 0.0755,
                                μ = 0.,
                                δ = 0.053,
                                d_0 = 3.0700,
                                d_T = 2.5019,
                                d = d_T,
                                d0 = 3.07)

# some default settings
settings_defaults = @with_kw (z_max = 5,
                                z = unique([range(0., 0.1, length = 400)' range(0.1, 1., length = 400)' range(1., z_max, length = 100)']),
                                Δ_E = 1e-6,
                                iterations = 2,
                                ode_solve_algorithm = CVODE_BDF(),
                                g_node_count = 30,
                                T = 40.0,
                                t = range(0.0, T, length = 10),
                                g = LinearInterpolation(t, stationary_numerical(parameter_defaults(), z).g .+ 0.01*t),
                                E_node_count = 15,
                                entry_residuals_nodes_count = 15,
                                global_transition_x0 = [-0.9283233397558605, -0.7931227777335486, -0.6049356364806617, -0.4927044449099116, -0.3358353090972862, 
                                                        -0.2497406170581776, -0.24267972513426644, -0.1251863870906156, -0.0948087489326721, -0.08776386898955374, 
                                                        -0.05730272455803215, -0.04512884607138278, -0.030714141187059757, -0.03010019595942575],
                                global_transition_lb = global_transition_x0,
                                global_transition_ub = global_transition_lb,
                                global_transition_iterations = 2, 
                                global_transition_weights = [fill(15, 3); fill(1, entry_residuals_nodes_count-3)],
                                global_transition_penalty_coefficient = 0.0, # coefficient to be used for a penalty function for constraints on increasing E
                                tstops = nothing)
